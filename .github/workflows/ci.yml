name: test suite

on:
  pull_request:
  push:
    branches:
      - main

jobs:

  cargo-fmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        plan: [smoke]
    defaults:
      run:
        working-directory: ${{ matrix.plan }}
    steps:
    - uses: actions/checkout@v2
    - name: Get latest version of stable rust
      run: rustup update stable
    - name: Check formatting with cargofmt
      run: cargo fmt --all -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    needs: cargo-fmt
    strategy:
      matrix:
        plan: [smoke]
    defaults:
      run:
        working-directory: ${{ matrix.plan }}
    steps:
    - uses: actions/checkout@v1
    - name: Get latest version of stable Rust
      run: rustup update stable
    - name: Lint code for quality and style with Clippy
      run: cargo clippy --workspace --tests -- -D warnings
    - name: Certify Cargo.lock freshness
      run: git diff --exit-code Cargo.lock

  smoke:
    name: Run `smoke`
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          path: gossipsub-testground

      - name: Checkout testground
        uses: actions/checkout@v2
        with:
          path: testground
          repository: testground/testground

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'

      - name: Install testground
        run: make install
        working-directory: testground

      - name: Run testground daemon
        run: testground daemon &

      # In order to ensure that the containers are ready at running test plan later, run the healthcheck subcommand with the --fix flag.
      - name: Run testground healthcheck
        run: testground healthcheck --runner local:docker --fix

      - name: Import test plans
        run: testground plan import --from gossipsub-testground

      - name: Run `smoke` test plan
        run: |
          testground run single \
            --plan=gossipsub-testground/smoke \
            --testcase=smoke \
            --builder=docker:generic \
            --runner=local:docker \
            --instances=5 \
            --wait